apply plugin: 'com.android.application'

println("${username}") //这是缩写    ${rootProject.ext.username} 全写

//赋值与引用
def androidId = rootProject.ext.androidId
def appId = rootProject.ext.appId
def support = rootProject.ext.dependencies

android {
    compileSdkVersion androidId.compileSdkVersion
    buildToolsVersion androidId.buildToolsVersion
    defaultConfig {
        applicationId appId.app
        minSdkVersion androidId.minSdkVersion
        targetSdkVersion androidId.targetSdkVersion
        versionCode androidId.versionCode
        versionName androidId.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("boolean", "isRelease", String.valueOf(isRelease))

        //在gradle文件中配置选项参数值（用于APT传参接收） 一般用于传模块的名
        //切记：必须写在defaultConfig节点下
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName(), packageNameForAPT: packageNameForAPT]
                //传模块名用于区分
            }
        }
    }

    // 设置签名信息 signingConfig必须放在buildTypes上面
    signingConfigs {
        debug {
            storeFile file('C:/Users/49944/.android/debug.keystore')
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            //签名证书文件
            storeFile file('E:/AndroidKeyStore/hrouter.jks')
            //签名证书的类型
            storeType "xinhua"
            storePassword "499445057"
            keyAlias "xinhua"
            keyPassword "499445057"
            //是否开启v2打包
            v2SigningEnabled true
        }
    }

    buildTypes {
        debug {
            //对构建类型设置签名信息
            signingConfig signingConfigs.debug
            buildConfigField("String", "debug_url", "\"${url.debug}\"")
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            buildConfigField("String", "release_url", "\"${url.release}\"")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


    //遍历数组
    support.each { k, v -> implementation v }

    implementation project(path: ':common')
    implementation project(path: ':annotation-hrouter')
    annotationProcessor project(path: ':complier-hrouter')
    if (isRelease) {
        implementation project(path: ':personal')
        implementation project(path: ':order')
    }

}
